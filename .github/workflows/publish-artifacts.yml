name: Build and publish containers and charts

on:
  push:
    branches:
      - main

env:
  NIARTIFACTS_USER: ${{ secrets.NIARTIFACTS_USER }}
  NIARTIFACTS_REGISTRY: niartifacts.jfrog.io
  NIARTIFACTS_PASSWORD: ${{ secrets.NIARTIFACTS_PASSWORD }}
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_REGISTRY: docker.io
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}


  KEY_ID: ${{ secrets.NI_KEY_ID }}
  IMAGE_TAG: niartifacts.jfrog.io/rdsdck/test-image:${{ github.run_id }}

jobs:
  build-publish-containers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create gnupghome
        run: mkdir ${{ runner.temp }}/gpg
      - name: Create sigstore directory
        run: mkdir ${{ runner.temp }}/sigstore
      - name: Create public key file
        env:
          PUBLIC_KEY: ${{ secrets.NI_PUB_KEY }}
        run: echo "$PUBLIC_KEY" | base64 --decode > $RUNNER_TEMP/pubring.asc
      - name: Create private key file
        env:
          PRIVATE_KEY: ${{ secrets.NI_PRIVATE_KEY }}
        run: echo "$PRIVATE_KEY" | base64 --decode > $RUNNER_TEMP/secring.asc
      - name: Import Public Key
        run: cat $RUNNER_TEMP/pubring.asc | gpg --import
      - name: Import Private Key
        run: cat $RUNNER_TEMP/secring.asc | gpg --import
      - name: Log into Artifactory
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.NIARTIFACTS_USER }}
          password: ${{ env.NIARTIFACTS_PASSWORD}}
          registry: ${{ env.NIARTIFACTS_REGISTRY }}
      - name: Log into DockerHub
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.NIARTIFACTS_USER }}
          password: ${{ env.NIARTIFACTS_PASSWORD}}
          registry: ${{ env.NIARTIFACTS_REGISTRY }}
      - name: Build container
        run: podman build -t $IMAGE_TAG .
      - name: Push container
        run: podman push $IMAGE_TAG
      - name: Sign image
        run: podman image sign --all --sign-by $KEY_ID -d ${{ runner.temp }}/sigstore docker://$IMAGE_TAG
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Sync signatures to S3
        run: aws s3 sync ${{ runner.temp }}/sigstore s3://signing-web-demo-bucket-1neyh347t53dt